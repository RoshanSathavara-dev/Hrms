@model Hrms_system.ViewModels.LoginViewModel

@{
    ViewData["Title"] = "Login";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0 text-center">
                        @(Model.ShowPasswordSetup && Model.IsTemporaryPasswordVerified ? "Set New Password" : "Login")
                    </h4>
                </div>
                <div class="card-body">
                    <form asp-controller="Account" asp-action="Login" method="post">
                        <input type="hidden" asp-for="IsFirstLogin" />
                        <input type="hidden" asp-for="ShowPasswordSetup" />
                        <input type="hidden" asp-for="IsTemporaryPasswordVerified" />

                        <div class="mb-3">
                            <label asp-for="Email" class="form-label"></label>
                            <input asp-for="Email" class="form-control" readonly="@(Model.ShowPasswordSetup ? "readonly" : null)">
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>

                        @if (Model.ShowPasswordSetup && Model.IsTemporaryPasswordVerified)
                        {
                            <!-- New password fields -->
                            <div class="mb-3">
                                <label asp-for="NewPassword" class="form-label">New Password</label>
                                <div class="input-group">
                                    <input asp-for="NewPassword" class="form-control" autocomplete="new-password" id="loginNewPassword" />
                                    <button type="button" class="btn btn-outline-secondary toggle-password" data-target="loginNewPassword"><i class="fas fa-eye"></i></button>
                                </div>
                                <span asp-validation-for="NewPassword" class="text-danger"></span>
                            </div>
                            <div class="mb-3">
                                <label asp-for="ConfirmPassword" class="form-label">Confirm Password</label>
                                <div class="input-group">
                                    <input asp-for="ConfirmPassword" class="form-control" autocomplete="new-password" id="loginConfirmPassword" />
                                    <button type="button" class="btn btn-outline-secondary toggle-password" data-target="loginConfirmPassword"><i class="fas fa-eye"></i></button>
                                </div>
                                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                            </div>
                        }
                        else
                        {
                            <div class="mb-3">
                                <label asp-for="Password" class="form-label">
                                    @(Model.ShowPasswordSetup ? "Temporary Password" : "Password")
                                </label>
                                <div class="input-group">
                                    <input asp-for="Password" class="form-control" autocomplete="off" id="loginPassword" />
                                    <button type="button" class="btn btn-outline-secondary toggle-password" data-target="loginPassword"><i class="fas fa-eye"></i></button>
                                </div>
                                <span asp-validation-for="Password" class="text-danger"></span>
                            </div>
                            @if (!Model.ShowPasswordSetup)
                            {
                                <div class="form-check mb-3">
                                    <input asp-for="RememberMe" class="form-check-input" />
                                    <label asp-for="RememberMe" class="form-check-label">Remember me</label>
                                </div>
                            }
                        }


                        @if (!ViewData.ModelState.IsValid)
                        {
                            <div class="alert alert-danger">
                                <ul>
                                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                                    {
                                        <li>@error.ErrorMessage</li>
                                    }
                                </ul>
                            </div>
                        }

                        <button type="submit" class="btn btn-primary w-100">
                            @(Model.ShowPasswordSetup ?
                                (Model.IsTemporaryPasswordVerified ? "Set Password" : "Continue")
                                : "Login")
                        </button>
                    </form>

                    @if (!Model.ShowPasswordSetup)
                    {
                        <p class="mt-3 text-center">
                            Don't have an account? <a asp-action="Register">Register</a>
                        </p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.querySelectorAll(".toggle-password").forEach(button => {
            button.addEventListener("click", function () {
                let inputField = document.getElementById(this.getAttribute("data-target"));
                let icon = this.querySelector("i");

                if (inputField.type === "password") {
                    inputField.type = "text";
                    icon.classList.remove("fa-eye");
                    icon.classList.add("fa-eye-slash");
                } else {
                    inputField.type = "password";
                    icon.classList.remove("fa-eye-slash");
                    icon.classList.add("fa-eye");
                }
            });
        });
    </script>
}