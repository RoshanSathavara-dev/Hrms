@model EmployeeAttendanceViewModel

@{
    Layout = "_AdminLayout";
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-md-12">
            @if (Model.Employee != null)
            {
                <h2>Attendance for @Model.Employee.FullName</h2>
            }
            else
            {
                <h2>Attendance (Employee Not Found)</h2>
            }
        </div>
    </div>


    <!-- Month/Year Filter -->
    <div class="row mb-4">
        <div class="col-md-12">
            <form asp-action="EmployeeAttendance" method="get" class="mb-4">
                @if (Model.Employee != null)
                {
                    <input type="hidden" name="employeeId" value="@Model.Employee.Id" />
                }
                <div class="row">
                    <div class="col-md-3">
                        <label class="form-label">Select Month/Year</label>
                        <input type="text" name="selectedDate" id="monthPicker" class="form-control"
                               value="@Model.SelectedDate.ToString("MM/yyyy")" readonly />
                    </div>
                    <div class="col-md-2 align-self-end">
                        <button type="submit" class="btn btn-primary">Apply</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h5>Summary (@Model.FromDate.ToString("d") to @Model.ToDate.ToString("d"))</h5>
                </div>
                <div class="card-body">
                    @if (Model.Summary != null)
                {
                    <div class="row">
                        <div class="col-md-3">
                            <div class="card bg-light">
                                <div class="card-body text-center">
                                    <h5 class="card-title">Total Days</h5>
                                    <h3 class="card-text">@Model.Summary.TotalDays</h3>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="card bg-light">
                                <div class="card-body text-center">
                                    <h5 class="card-title">Total Hours</h5>
                                    <h3 class="card-text">@Model.Summary.TotalHours.ToString(@"hh\:mm")</h3>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="card bg-light">
                                <div class="card-body text-center">
                                    <h5 class="card-title">Avg Hours/Day</h5>
                                    <h3 class="card-text">@Model.Summary.AverageHoursPerDay.ToString(@"hh\:mm")</h3>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="card bg-light">
                                <div class="card-body text-center">
                                    <h5 class="card-title">Late Arrivals</h5>
                                    <h3 class="card-text">@Model.Summary.LateArrivals</h3>
                                </div>
                            </div>
                        </div>
                    </div>
                    }
                else
                {
                    <p>No summary available.</p>
                }
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h5>Detailed Records</h5>
                </div>
                <div class="card-body">
                    <table class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>Clock In</th>
                                <th>Clock Out</th>
                                <th>Breaks</th>
                                <th>Total Break</th>
                                <th>Actual Hours</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Records != null)
    {
                            @foreach (var item in Model.Records)
                            {
                                <tr>
                                    <td>@item.Date.ToString("d")</td>
                                    <td>
                                        @item.ClockIn.ToString("t")
                                        @if (item.IsLate)
                                        {
                                            <span class="badge bg-warning ms-2">Late</span>
                                        }
                                    </td>
                                    <td>
                                        @(item.ClockOut?.ToString("t") ?? "--")
                                        @if (item.IsEarlyDeparture)
                                        {
                                            <span class="badge bg-warning ms-2">Early</span>
                                        }
                                    </td>
                                        <td>
                                            @if (item.BreakLogs.Any())
                                            {
                                                <ul class="list-unstyled mb-0">
                                                    @foreach (var breakLog in item.BreakLogs)
                                                    {
                                                        <li>@breakLog.BreakStart.ToString("HH:mm") - @(breakLog.BreakEnd?.ToString("HH:mm") ?? "-")</li>
                                                    }
                                                </ul>
                                            }
                                            else
                                            {
                                                <span>-</span>
                                            }
                                        </td>
                                        <td>@item.BreakDuration.ToString(@"hh\:mm")</td>
                                        <td>@item.ActualHours.ToString(@"hh\:mm")</td>

                                    <td>
                                        <span class="badge @(item.Status == "Complete" ? "bg-success" : "bg-danger")">
                                            @item.Status
                                        </span>
                                    </td>
                                    <td>
                                        <button class="btn btn-sm btn-outline-primary edit-record"
                                                data-id="@item.Id"
                                                data-clockin="@item.ClockIn.ToString("s")"
                                                data-clockout="@item.ClockOut?.ToString("s")">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                            }
    else
    {
                                <tr>
                                    <td colspan="8">No records available.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Edit Modal -->
<div class="modal fade" id="editModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Attendance Record</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editForm">
                    <input type="hidden" id="recordId" name="id" />
                    <div class="mb-3">
                        <label class="form-label">Clock In</label>
                        <input type="datetime-local" class="form-control" id="editClockIn" name="clockIn" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Clock Out</label>
                        <input type="datetime-local" class="form-control" id="editClockOut" name="clockOut" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveChanges">Save Changes</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Include Bootstrap Datepicker CSS and JS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js"></script>

    <script>
        $(document).ready(function() {
            // Initialize month picker
            $('#monthPicker').datepicker({
                format: 'mm/yyyy',
                viewMode: 'months',
                minViewMode: 'months',
                autoclose: true,
                orientation: 'bottom auto'
            });

            // Optional: Auto-submit form on date selection
            $('#monthPicker').on('changeDate', function() {
                $(this).closest('form').submit();
            });

            // Edit record modal
            $('.edit-record').click(function() {
                var recordId = $(this).data('id');
                var clockIn = $(this).data('clockin');
                var clockOut = $(this).data('clockout');

                $('#recordId').val(recordId);
                $('#editClockIn').val(clockIn);
                $('#editClockOut').val(clockOut || '');

                $('#editModal').modal('show');
            });

            // Save changes
            $('#saveChanges').click(function() {
                var formData = $('#editForm').serialize();

                $.ajax({
                    url: '@Url.Action("AdjustAttendance")',
                    type: 'POST',
                    data: formData,
                    success: function(response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            alert('Error saving changes');
                        }
                    },
                    error: function() {
                        alert('Error saving changes');
                    }
                });
            });
        });
    </script>
}