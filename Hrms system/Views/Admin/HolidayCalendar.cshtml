@{
    ViewData["Title"] = "Holiday Calendar";
    Layout = "_AdminLayout";
}

<div class="container py-4">
    <h2 class="mb-4">Holiday Calendar</h2>

    <!-- Action Buttons Section -->
    <div class="mb-3 d-flex justify-content-between align-items-center">
        <div class="d-flex gap-2">
            <!-- Add Holiday Button -->
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#manualAddHolidayModal">
                <i class="fas fa-plus me-2"></i>Add Holiday
            </button>

            <!-- Bulk Upload Button with Modal Trigger -->
            <button class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#bulkUploadModal">
                <i class="fas fa-upload me-2"></i>Import
            </button>

            <!-- Download Sample Excel Button -->
            <a href="/Admin/DownloadHolidaySample" class="btn btn-outline-secondary">
                <i class="fas fa-download me-2"></i>Download Sample
            </a>
        </div>
    </div>

    <!-- Calendar Section -->
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <div id="calendar"></div>
        </div>
    </div>

    <!-- Holiday List Table -->
    <div class="card shadow-sm">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Date</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody id="holidayTableBody">
                        <!-- Holidays will be populated dynamically via JavaScript -->
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center" id="pagination">
                    <!-- Pagination will be populated dynamically via JavaScript -->
                </ul>
            </nav>
        </div>
    </div>
</div>

<!-- Modal for Adding Holiday (Clicking on Calendar) -->
<div class="modal fade" id="addHolidayModal" tabindex="-1" aria-labelledby="addHolidayLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="holidayForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="addHolidayLabel">Add Holiday</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="holidayDate" />
                    <div class="mb-3">
                        <label for="holidayTitle" class="form-label">Holiday Title</label>
                        <input type="text" class="form-control" id="holidayTitle" placeholder="e.g. Independence Day" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" id="removeHolidayBtn" class="btn btn-danger" style="display: none;">Remove Holiday</button>
                    <button type="submit" class="btn btn-primary">Add Holiday</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Manual Add Holiday Modal -->
<div class="modal fade" id="manualAddHolidayModal" tabindex="-1" aria-labelledby="manualAddHolidayLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="manualHolidayForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="manualAddHolidayLabel">Add Holiday</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="manualHolidayTitle" class="form-label">Holiday Name</label>
                        <input type="text" class="form-control" id="manualHolidayTitle" placeholder="e.g. Independence Day" required />
                    </div>
                    <div class="mb-3">
                        <label for="manualHolidayDate" class="form-label">Date</label>
                        <input type="date" class="form-control" id="manualHolidayDate" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Add Holiday</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Bulk Upload Modal -->
<div class="modal fade" id="bulkUploadModal" tabindex="-1" aria-labelledby="bulkUploadLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="bulkUploadForm" enctype="multipart/form-data" method="post" action="/Admin/BulkUploadHolidays">
                <div class="modal-header">
                    <h5 class="modal-title" id="bulkUploadLabel">Bulk Upload Holidays</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="bulkUploadFile" class="form-label">Upload Excel File</label>
                        <input type="file" class="form-control" id="bulkUploadFile" name="file" accept=".xlsx,.xls" required />
                        <small class="form-text text-muted">Please upload an Excel file following the sample format.</small>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Upload</button>
                </div>
            </form>
        </div>
    </div>
</div>

<link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.js"></script>
    <script>
        let selectedDate = null;
        let calendar;
        let currentPage = 1;
        const itemsPerPage = 10;
        let allHolidays = [];

        // Populate Holiday List with Pagination
        function populateHolidayList(holidays, page = 1) {
            allHolidays = holidays.filter(h => h.display !== "background");

            // Sort holidays by date
            allHolidays.sort((a, b) => new Date(a.start) - new Date(b.start));

            const totalPages = Math.ceil(allHolidays.length / itemsPerPage);
            currentPage = Math.min(page, totalPages);

            const startIndex = (currentPage - 1) * itemsPerPage;
            const paginatedItems = allHolidays.slice(startIndex, startIndex + itemsPerPage);

            const tbody = document.getElementById('holidayTableBody');
            tbody.innerHTML = ''; // Clear existing rows

            paginatedItems.forEach(h => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${h.title}</td>
                    <td>${new Date(h.start).toLocaleDateString('en-GB', { day: '2-digit', month: '2-digit', year: 'numeric' }).split('/').join('/')}</td>
                    <td>
                        <button class="btn btn-sm btn-outline-primary me-1 edit-holiday-btn" data-id="${h.id}" data-title="${h.title}" data-date="${h.start}">
                            <i class="fas fa-edit"></i>
                        </button>
                        <button class="btn btn-sm btn-outline-danger delete-holiday-btn" data-id="${h.id}">
                            <i class="fas fa-trash"></i>
                        </button>
                    </td>
                `;
                tbody.appendChild(row);
            });

            // Update pagination controls
            updatePaginationControls(totalPages);

            // Add event listeners for edit and delete buttons
            addEventListenersToButtons();
        }

        // Update pagination controls
        function updatePaginationControls(totalPages) {
            const paginationEl = document.getElementById('pagination');
            paginationEl.innerHTML = '';

            if (totalPages <= 1) return;

            // Previous button
            const prevLi = document.createElement('li');
            prevLi.className = `page-item ${currentPage === 1 ? 'disabled' : ''}`;
            prevLi.innerHTML = `<a class="page-link" href="#" aria-label="Previous"><span aria-hidden="true">&laquo;</span></a>`;
            prevLi.addEventListener('click', (e) => {
                e.preventDefault();
                if (currentPage > 1) populateHolidayList(allHolidays, currentPage - 1);
            });
            paginationEl.appendChild(prevLi);

            // Page numbers
            for (let i = 1; i <= totalPages; i++) {
                const pageLi = document.createElement('li');
                pageLi.className = `page-item ${i === currentPage ? 'active' : ''}`;
                pageLi.innerHTML = `<a class="page-link" href="#">${i}</a>`;
                pageLi.addEventListener('click', (e) => {
                    e.preventDefault();
                    populateHolidayList(allHolidays, i);
                });
                paginationEl.appendChild(pageLi);
            }

            // Next button
            const nextLi = document.createElement('li');
            nextLi.className = `page-item ${currentPage === totalPages ? 'disabled' : ''}`;
            nextLi.innerHTML = `<a class="page-link" href="#" aria-label="Next"><span aria-hidden="true">&raquo;</span></a>`;
            nextLi.addEventListener('click', (e) => {
                e.preventDefault();
                if (currentPage < totalPages) populateHolidayList(allHolidays, currentPage + 1);
            });
            paginationEl.appendChild(nextLi);
        }

        // Add event listeners to edit and delete buttons
        function addEventListenersToButtons() {
            document.querySelectorAll('.edit-holiday-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    const id = this.getAttribute('data-id');
                    const title = this.getAttribute('data-title');
                    const date = this.getAttribute('data-date');

                    document.getElementById('holidayTitle').value = title;
                    document.getElementById('holidayDate').value = date;

                    const removeBtn = document.getElementById('removeHolidayBtn');
                    const submitBtn = document.querySelector('#holidayForm button[type="submit"]');
                    removeBtn.style.display = 'block';
                    submitBtn.style.display = 'none';

                    removeBtn.onclick = function() {
                        if (confirm("Are you sure you want to remove this holiday?")) {
                            removeHoliday(id);
                        }
                    };

                    const addHolidayModal = new bootstrap.Modal(document.getElementById('addHolidayModal'));
                    addHolidayModal.show();
                });
            });

            document.querySelectorAll('.delete-holiday-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    const id = this.getAttribute('data-id');
                    if (confirm("Are you sure you want to delete this holiday?")) {
                        removeHoliday(id);
                    }
                });
            });
        }

        // Manual Add Holiday Form Submission
        document.getElementById('manualHolidayForm').addEventListener('submit', function (e) {
            e.preventDefault();
            const title = document.getElementById('manualHolidayTitle').value;
            const date = document.getElementById('manualHolidayDate').value;

            const submitBtn = this.querySelector('button[type="submit"]');
            submitBtn.disabled = true;
            submitBtn.textContent = 'Adding...';

            fetch('/Admin/AddHoliday', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ Title: title, Date: date })
            })
            .then(response => {
                if (response.ok) {
                    calendar.refetchEvents();
                    bootstrap.Modal.getInstance(document.getElementById('manualAddHolidayModal')).hide();
                    alert("Holiday added successfully.");
                } else {
                    alert("Failed to add holiday.");
                }
            })
            .finally(() => {
                submitBtn.disabled = false;
                submitBtn.textContent = 'Add Holiday';
            });
        });

        // Calendar Initialization
        document.addEventListener('DOMContentLoaded', function () {
            const calendarEl = document.getElementById('calendar');
            const removeBtn = document.getElementById('removeHolidayBtn');
            const submitBtn = document.querySelector('#holidayForm button[type="submit"]');

            calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                selectable: true,
                height: 'auto',
                events: function(fetchInfo, successCallback, failureCallback) {
                    fetch('/Admin/GetHolidays')
                        .then(response => response.json())
                        .then(data => {
                            populateHolidayList(data);
                            successCallback(data);
                        })
                        .catch(err => failureCallback(err));
                },
                dateClick: function (info) {
                    selectedDate = info.dateStr;
                    document.getElementById('holidayDate').value = selectedDate;
                    document.getElementById('holidayTitle').value = '';

                    removeBtn.style.display = 'none';
                    submitBtn.style.display = 'block';
                    submitBtn.disabled = false;
                    submitBtn.textContent = 'Add Holiday';

                    const addHolidayModal = new bootstrap.Modal(document.getElementById('addHolidayModal'));
                    addHolidayModal.show();
                },
                eventClick: function (info) {
                    document.getElementById('holidayTitle').value = info.event.title;
                    document.getElementById('holidayDate').value = info.event.startStr;

                    removeBtn.style.display = 'block';
                    submitBtn.style.display = 'none';

                    removeBtn.onclick = function() {
                        if (confirm("Are you sure you want to remove this holiday?")) {
                            removeHoliday(info.event.id);
                        }
                    };

                    const addHolidayModal = new bootstrap.Modal(document.getElementById('addHolidayModal'));
                    addHolidayModal.show();
                }
            });
            window.calendar = calendar;
            calendar.render();

            // Add Holiday Form Submission (via Calendar click)
            document.getElementById('holidayForm').addEventListener('submit', function (e) {
                e.preventDefault();

                const title = document.getElementById('holidayTitle').value;
                const date = document.getElementById('holidayDate').value;

                submitBtn.disabled = true;
                submitBtn.textContent = 'Adding...';

                fetch('/Admin/AddHoliday', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ Title: title, Date: date })
                })
                .then(response => {
                    if (response.ok) {
                        calendar.refetchEvents();
                        bootstrap.Modal.getInstance(document.getElementById('addHolidayModal')).hide();
                        alert("Holiday added successfully.");
                    } else {
                        alert("Failed to add holiday.");
                    }
                })
                .finally(() => {
                    submitBtn.disabled = false;
                    submitBtn.textContent = 'Add Holiday';
                });
            });
        });

        // Remove Holiday Function
        function removeHoliday(eventId) {
            const removeBtn = document.getElementById('removeHolidayBtn');
            removeBtn.disabled = true;
            removeBtn.textContent = 'Removing...';

            fetch(`/Admin/RemoveHoliday?id=${eventId}`, {
                method: 'DELETE'
            })
            .then(response => {
                if (response.ok) {
                    bootstrap.Modal.getInstance(document.getElementById('addHolidayModal')).hide();
                    calendar.refetchEvents();
                    alert("Holiday removed successfully.");
                } else {
                    alert("Failed to remove holiday.");
                }
            })
            .finally(() => {
                removeBtn.disabled = false;
                removeBtn.textContent = 'Remove Holiday';
            });
        }
    </script>
}

<style>
    .fc-daygrid-event.holiday-highlight {
        background-color: #ffcccc;
        color: #990000;
        border: none;
        font-weight: bold;
        padding: 2px 4px;
        font-size: 0.75rem;
    }

    .fc-daygrid-day.holiday .fc-daygrid-day-frame {
        background-color: #fff5f5;
        border: 1px solid #ffcccc;
    }

    .fc-daygrid-day.holiday {
        color: #e74c3c;
        font-weight: bold;
    }

    .table th, .table td {
        vertical-align: middle;
    }

    .btn-outline-primary, .btn-outline-secondary {
        transition: all 0.3s ease;
    }

        .btn-outline-primary:hover, .btn-outline-secondary:hover {
            transform: translateY(-2px);
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        }

    .table-responsive {
        overflow-x: auto;
    }

    .pagination {
        margin-top: 20px;
    }
</style>